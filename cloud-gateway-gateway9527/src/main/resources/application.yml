server:
  port: 9527

spring:
  application:
    name: cloud-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true #开启从注册中心动态创建路由的功能，利用微服务名进行路由
      routes:
        - id: payment_routh #payment_route #路由的ID，没有固定规则但要求唯一，建议配合服务名
          #uri: http://localhost:8001
          uri: lb://cloud-payment-service #匹配后提供服务的路由地址
          predicates:
            - Path=/payment/get/** #断言，路径相匹配的进行路由

        - id: payment_routh2 #payment_route #路由的ID，没有固定规则但要求唯一，建议配合服务名
          #uri: http://localhost:8001
          uri: lb://cloud-payment-service #匹配后提供服务的路由地址
          predicates:
            - Path=/payment/lb/** #断言，路径相匹配的进行路由
            - After=2020-04-15T15:20:23.855+08:00[Asia/Shanghai] #断言，路径相匹配的进行路由
            #- Before=2020-04-15T15:20:23.855+08:00[Asia/Shanghai] #断言，路径相匹配的进行路由
            #- Between=2020-04-15T15:20:23.855+08:00[Asia/Shanghai], 2020-05-15T15:20:23.855+08:00[Asia/Shanghai]
            #- Cookie=username, wenren
            #- Header=X-Request-Id, \d+ #请求头要有X-Request-Id属性并且值为整数的正则表达式
            #- Host=**.wenren.com
            #- Method=GET
            #- Query=username, \d+ #要有参数名username并且值还要是整数才能路由
          #ilters:
            #- AddRequestParameter=X-Request-Id,1024 #过滤器工厂会在匹配的请求头加上一对请求头，名称为X-Request-Id值为1024

eureka:
  instance:
    hostname: cloud-gateway-service
  client: #服务提供者provider注册进eureka服务列表内
    service-url:
      register-with-eureka: true
      fetch-registry: true
      defaultZone: http://eureka7001.com:7001/eureka

#id: 我们自定义的路由ID，保持唯一
#uri：目标服务地址
#predicate：路由条件，Predicate接受一个输入参数返回一个布尔值。
#               该属性包含多种默认方法来将Predicate组合成其他复杂的逻辑（比如：与、或、非）